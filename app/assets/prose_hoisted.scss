// copied from prose components
@use '@/assets/shiki.scss' as *;


// ProseCode.vue
code.inline {
    border: .125rem solid;
    // border-radius: $radius;
    padding: $sixteenth-spacing-unit;
    // background-color: var(--t-bg-el1);
}

// ProsePre.vue
// @use '@/assets/shiki.scss' as *;

.codeblock {
    @extend %shiki;

    @include transition(color .16s, background-color .16s);
    color: var(--t-text);
    position: relative;
    border: .125rem solid;
    // border-radius: $radius;
    background-color: var(--t-bg-el1);

    .codemeta {
        padding: $quarter-spacing-unit;
        border-bottom: .125rem solid;
    }

    .codepad {
        padding: $quarter-spacing-unit;
    }

    pre {
        background: transparent;
        padding: $quarter-spacing-unit 0;
        margin: 0;
        border: none; // override global `pre` style
        overflow-x: auto; // scroll if code block is too wide

        code {
            display: block;
            width: fit-content;
            min-width: 100%;
            line-height: 1.6;

            span.line {
                display: flex;
                flex-direction: row;
            }
        }
        &:not(.shiki) {
            padding: $quarter-spacing-unit $quarter-spacing-unit + $eighth-spacing-unit;
        }
    }

    .copysnippet {
        .iconify {
            width: 1.333em;
        }

        aspect-ratio: 1;
        width: fit-content;
    }

    span+.copysnippet {
        // border-radius: 0 $half-radius $half-radius 0;
    }

    .codecorner {
        user-select: none;
        position: absolute;
        top: $quarter-spacing-unit - 2px;
        right: $quarter-spacing-unit - 2px;
        background-color: var(--t-pink-bg);
        color: var(--t-bg);
        // border-radius: $half-radius;
        > span {
            padding: 0 $eighth-spacing-unit;
            align-content: center;
        }
    }
}
