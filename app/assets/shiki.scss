@use "~/assets/variables.scss" as *;
@use "@picocss/pico/scss/colors" as *;

%shiki {
    &>pre {

        // css styles for shiki
        &.shiki>code {
            counter-reset: step;
            counter-increment: step calc(var(--start, 1) - 1);

            &>span {
                display: block;
            }

            .line {

                // handle dark mode
                @media (prefers-color-scheme: dark) {
                    span {
                        color: var(--shiki-d) !important;
                    }
                }

                &::before {
                    content: counter(step);
                    counter-increment: step;
                    width: 2.5rem;
                    padding-right: $quarter-spacing-unit;
                    display: inline-block;
                    text-align: right;
                    color: color-mix(in srgb, var(--t-text), transparent 50%);
                    border-right: 0.125em solid color-mix(in srgb, var(--t-text), transparent 50%);
                    margin-right: $quarter-spacing-unit;
                }

                &.diff {

                    &.remove {
                        &::before {
                            content: "- " counter(step);
                        }

                        background-color: color-mix(in srgb, $red-550, transparent 60%);
                    }

                    &.add {
                        &::before {
                            content:  "+ " counter(step);
                        }

                        background-color: color-mix(in srgb, $jade-450, transparent 60%);
                    }
                }

                &.highlighted,
                &.highlight {
                    background-color: color-mix(in srgb, $grey-500, transparent 70%);

                    &.error {
                        background-color: color-mix(in srgb, $red-550, transparent 60%);
                    }

                    &.warning {
                        background-color: color-mix(in srgb, $amber-450, transparent 60%);
                    }
                }

                // not implemented bc nuxt content does not enable this
                // &.highlighted-word {}

                // not implemented bc nuxt content does not enable this
                // span.tab::before {
                //     content: '⇥';
                //     position: absolute;
                //     opacity: 0.3;
                // }

                // span.space::before {
                //     content: '·';
                //     position: absolute;
                //     opacity: 0.3;
                // }
            }
        }

        &.has-focused {
            &>code .line {
                filter: blur(.125rem);
                opacity: .6;
                @include transition(filter .16s, opacity .16s);

                &.focused {
                    filter: none;
                    opacity: 1;
                }
            }

            &:hover {
                &>code .line {
                    filter: none;
                    opacity: 1;
                }
            }
        }
    }
}